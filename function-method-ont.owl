<?xml version="1.0"?>
<rdf:RDF xmlns="https://github.com/kataph/function-method-ontology#"
     xml:base="https://github.com/kataph/function-method-ontology"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:DOLCE="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#"
     xmlns:terms="http://purl.org/dc/terms/">
    <owl:Ontology rdf:about="https://github.com/kataph/function-method-ontology">
        <owl:imports rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE"/>
        <terms:license rdf:resource="https://creativecommons.org/publicdomain/zero/1.0/"/>
        <rdfs:comment xml:lang="en">Capability, functionality, and engineering methods ontology.

Attachment to the paper &quot;About functions, behaviours, and capabilities
in formal ontology and engineering&quot; in submission to the Semantic Web Journal, this ontology exemplify how the first order theory described in the paper can be translated in OWL.

The Dolce-owl ontology is the OWL version of Dolce which has been recently submitted to the ISO 21838 standard.</rdfs:comment>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/dc/terms/license -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/license"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Datatypes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- https://github.com/kataph/function-method-ontology#ohms -->

    <rdfs:Datatype rdf:about="https://github.com/kataph/function-method-ontology#ohms"/>
    


    <!-- https://github.com/kataph/function-method-ontology#volts -->

    <rdfs:Datatype rdf:about="https://github.com/kataph/function-method-ontology#volts"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- https://github.com/kataph/function-method-ontology#causally-contributes-to -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#causally-contributes-to">
        <rdfs:domain rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD"/>
        <rdfs:range rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD"/>
        <rdfs:isDefinedBy>This relation abstracts causal explanations of complex occurences.  For example, &quot;the beam was cut, therefore it fell to the floor&quot;: we could introduce in the domain of discourse two perdurants: &quot;cutting the beam [in some context]&quot; and &quot;falling to the floor [in some context]&quot; and then state causally-contributes-to(&quot;cutting the beam&quot;, &quot;falling to the floor&quot;)</rdfs:isDefinedBy>
        <rdfs:label>causally-contributes-to</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#classified-by -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#classified-by">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#classifies"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:label>classified-by</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#classifies -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#classifies">
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:label>classifies</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#constant-part-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#constant-part-of">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
        <rdfs:domain rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ED"/>
        <rdfs:range rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ED"/>
        <rdfs:comment>constant part-of relation</rdfs:comment>
        <rdfs:label>constant-part-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#definition-founded-on -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#definition-founded-on">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:comment>“x is definition-founded on some entity y if
and only if y is used to define x”.</rdfs:comment>
        <rdfs:label>definition-founded-on</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#electric-coupling -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#electric-coupling">
        <rdfs:subPropertyOf rdf:resource="https://github.com/kataph/function-method-ontology#structural-coupling"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#SymmetricProperty"/>
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>electric-coupling</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#external-to -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#external-to">
        <rdfs:comment>This relation expresses the fact that two entities are &apos;external&apos;. The precise definition of the external-to relation depends on the underlying reference ontology. Using DOLCE we defined it as follows: x is external to y if and only if x is neither a quality of y, nor one of y’s constituents, nor x and y have parts in common.</rdfs:comment>
        <rdfs:comment>externalTo(x,y) ⇐⇒¬(qt(x,y) ∨constitutes(x,y) ∨O(x,y))</rdfs:comment>
        <rdfs:label>external-to</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#function-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#function-of">
        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#has-function"/>
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>function-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#has-function -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#has-function">
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <rdfs:label>has-function</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#has-main-function -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#has-main-function">
        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#main-function-of"/>
        <rdfs:label>has-main-function</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#instantiation-founded-on -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#instantiation-founded-on">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:comment>foundedInst(x, y) ⇐⇒ (CN(x)∧∃z, t(CL(z, x, t))∧∀z, t(CL(z, x, t) =⇒ ∃w(founded(z,w)∧CL(w, y, t))))
“the concept x is instantiation-founded on the concept y if and only if, given any z that plays x, then z is
founded on some instance of y”</rdfs:comment>
        <rdfs:label>instantiation-founded-on</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#main-function-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#main-function-of">
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#EngineeringMethod"/>
        <rdfs:label>main-function-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#partecipated-by-doer -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#partecipated-by-doer">
        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#participates-as-doer"/>
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#Behaviour"/>
        <rdfs:range>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ASO"/>
                    <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:range>
        <rdfs:label>partecipated-by-doer</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#participates-as-doer -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#participates-as-doer">
        <rdfs:subPropertyOf rdf:resource="https://github.com/kataph/function-method-ontology#participates-in"/>
        <rdfs:domain>
            <owl:Class>
                <owl:unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ASO"/>
                    <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
                </owl:unionOf>
            </owl:Class>
        </rdfs:domain>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Behaviour"/>
        <rdfs:comment>This is a processual role contextualized by a behavior. For example, a cutting action entails that there is something that is the subject of the action, say a saw (or the system formed by a person or machine using the saw), and the object of the action, say a beam of wood. The same holds for pumping, joining, and other behaviors that can be described by transitive verbs.
The action subjects participate-as-doer to the behavior.</rdfs:comment>
        <rdfs:label>participates-as-doer</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#participates-as-flow -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#participates-as-flow">
        <rdfs:subPropertyOf rdf:resource="https://github.com/kataph/function-method-ontology#participates-in"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Behaviour"/>
        <rdfs:comment>This is a processual role contextualized by a behavior. For example, a cutting action entails that there is something that is the subject of the action, say a saw (or the system formed by a person or machine using the saw), and the object of the action, say a beam of wood. The same holds for pumping, joining, and other behaviors that can be described by transitive verbs.
The action objects participate-as-flow to the behavior.

We do not add a Flow class to this ontology, leaving the issue to further research, or to domain-level extensions of this ontology.</rdfs:comment>
        <rdfs:label>participate-as-flow</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#participates-in -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#participates-in">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:domain rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ED"/>
        <rdfs:range rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD"/>
        <rdfs:label>participates-in</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#plays-as -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#plays-as">
        <rdfs:subPropertyOf rdf:resource="https://github.com/kataph/function-method-ontology#classified-by"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Role"/>
        <rdfs:label>play-as</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#quale-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#quale-of">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:label>quale-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#quality-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#quality-of">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:domain rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#Q"/>
        <rdfs:label>quality-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#sp-dependent-on -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#sp-dependent-on">
        <rdfs:comment xml:lang="en">This dependence is specific and existential: x depends on y if and only if x exists at some time and at any time when x exists so does y.
(the predicate PRE(x,t) -- x exists at time t -- is omitted from this ontology, since it is only used to define the depends-on relation, in a way that is not implementable in OWL)</rdfs:comment>
        <rdfs:comment>specificallyDependsOn(x,y) ⇐⇒(∃t(PRE(x,t)) ∧∀t(PRE(x,t) =⇒PRE(y,t)))</rdfs:comment>
        <rdfs:label xml:lang="en">sp-depends-on</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#structural-coupling -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#structural-coupling">
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>structural-coupling</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#sub-concept-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#sub-concept-of">
        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#super-concept-of"/>
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:comment>subConceptOf(x, y) ⇐⇒ (CN(x) ∧ CN(y) ∧ ∃z, t(CL(z, x, t)) ∧ ∀z, t(CL(z, x, t) =⇒ CL(z, y, t)))
“A concept x is a sub-concept of a concept y if and only if all instances of x are also instances of y”</rdfs:comment>
        <rdfs:label>sub-concept-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#sub-function-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#sub-function-of">
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#EngineeringMethod"/>
        <rdfs:label>sub-function-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- https://github.com/kataph/function-method-ontology#super-concept-of -->

    <owl:ObjectProperty rdf:about="https://github.com/kataph/function-method-ontology#super-concept-of">
        <rdfs:domain rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:range rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:label>super-concept-of</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- https://github.com/kataph/function-method-ontology#has-direct-quale -->

    <owl:DatatypeProperty rdf:about="https://github.com/kataph/function-method-ontology#has-direct-quale">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topDataProperty"/>
        <rdfs:domain rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#Q"/>
        <rdfs:label>has-direct-quale</rdfs:label>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ASO -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ASO"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ED -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ED"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NAPO -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NAPO"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NASO -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NASO"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#POB -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#POB"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PRO -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PRO"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#Q -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#Q"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ST -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#ST"/>
    


    <!-- http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#STV -->

    <owl:Class rdf:about="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#STV"/>
    


    <!-- https://github.com/kataph/function-method-ontology#AmountOfMatterOntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#AmountOfMatterOntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Amount of Matter</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Battery -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Battery">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Battery</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#BatteryVoltage -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#BatteryVoltage">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capacity"/>
        <rdfs:label>Battery Voltage</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Behaviour -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Behaviour">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PD"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#participates-as-doer"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#participates-as-flow"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A subclass of DOLCE perdurants, representing perdurants from the point of view of a selected artifact, which is seen as the active agent (&quot;doer&quot;) in the perdurant. 
This class is partially characterized by the fact that
one can identify two ‘processual’ roles in the sense of: an active one, called doer, and a passive one, called operand or flow. 
For instance, a cutting action entails that there is something that is the subject of the action, say a saw (or the system formed by a person or machine using the saw), and the object of the action, say a beam of wood.</rdfs:comment>
        <rdfs:label>Behaviour</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Capability -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Capability">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#RelationalQuality"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#definition-founded-on"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#sp-dependent-on"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#Capacity"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A relational quality is a capability if and only if is definition-founded on
some ontological function</rdfs:comment>
        <rdfs:comment>Capability(x) ⇐⇒relationalQt(x)∧∃y(FunctionOnt(y)∧
foundedDef(x,y))</rdfs:comment>
        <rdfs:comment>Capability(x) ⇒∃y(Capacity(y)∧
founded(x,y))

A capability is founded on some capacity</rdfs:comment>
        <rdfs:label>Capability</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Capacity -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Capacity">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#RelationalQuality"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#sp-dependent-on"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#IntrinsicQuality"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty>
                    <rdf:Description>
                        <owl:inverseOf rdf:resource="https://github.com/kataph/function-method-ontology#sp-dependent-on"/>
                    </rdf:Description>
                </owl:onProperty>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#Capability"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Capacity(x) =⇒ relationalQt(x) ∧ ∃y(specificallyDependentOn(x, y) ∧ intrinsicQt(y) ∧ bearer(x) =
bearer(y))
“A capacity is a relational quality and is dependent on some intrinsic quality, which is carried by the same
bearer.”</rdfs:comment>
        <rdfs:comment>Capacity(x) =⇒ ∃y(Capability(y) ∧ specificallyDependentOn(y, x))
“Each capacity has a capability which is dependent on that capacity”</rdfs:comment>
        <rdfs:label>Capacity</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Cilinder -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Cilinder">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Cilinder</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Concept -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Concept">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NASO"/>
        <rdfs:label>Concept</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Connect -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Connect">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#PhysicalObjectOntologicalFunction"/>
        <rdfs:comment>Connect(x) ⇐⇒ (CL(y, x) ⇐⇒ E(y) ∧ startState(y, si, ti) ∧ endState(y, s f , t f ) ∧ Goal(s f ) ∧
∃a, b, c(POB(a)∧POB(b)∧POB(c)∧PC(a, si, ti)∧PC(a, s f , t f )∧PC(b, si, ti)∧PC(b, s f , t f )∧PC(c, s f , t f )∧
P(a, c, t f ) ∧ P(b, c, t f )) ∧ ¬∃c′(POB(c′) ∧ PC(c′, si, ti) ∧ P(a, c′, ti) ∧ P(b, c′, ti)))
“A concept is of connect type if and only if it classifies precisely those events that are transitions between a
starting state (si, with time extension ti) and a final state (s f , with extension t f ) and, moreover, there are two
physical objects (a and b) that participate in such states and, during the final state but not in the initial one,
they are both part of a physical object (c)”</rdfs:comment>
        <rdfs:label>Connect</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Convert -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Convert">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:comment>Convert(x) ⇐⇒ (CL(y, x) ⇐⇒ E(y) ∧ startState(y, si, ti) ∧ endState(y, s f , t f ) ∧ Goal(s f ) ∧
∃Φ, Ψ, a(Φ ∈ N R ∧ Ψ ∈ N R ∧ Ψ ∩ Φ = ∅ ∧ PC(a, si, ti) ∧ PC(a, s f , t f ) ∧ Φ(a, ti) ∧ Ψ(a, t f )))
“A concept is of convert type if and only if it classifies precisely those events that are transitions between a
starting state (si, with time extension ti) and a desired final state (s f , with extension t f ) and, moreover, there
is an entity (a) that at time ti is instance of a type (Φ), while at time t f is instance of a different, disjoint, type
(Ψ). Necessarily, Φ and Ψ are types belonging to the set of all non-rigid types of the underlying ontology
(N R)”</rdfs:comment>
        <rdfs:label>Convert</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#ConvertEnergy -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#ConvertEnergy">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Convert"/>
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunctionAboutAmountOfEnergy"/>
        <rdfs:comment>Some amount of energy changed its type</rdfs:comment>
        <rdfs:label>Convert energy</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Decrease -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Decrease">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction"/>
        <owl:disjointWith rdf:resource="https://github.com/kataph/function-method-ontology#Increase"/>
        <rdfs:comment>The value of some target quality decreased</rdfs:comment>
        <rdfs:label>Decrease</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#ElectricSwitch -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#ElectricSwitch">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Electric Switch</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#SolvedFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#SolvedFunction">
        <owl:equivalentClass>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#main-function-of"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#EngineeringMethod"/>
            </owl:Restriction>
        </owl:equivalentClass>
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Role"/>
        <rdfs:comment>The first order logic definition of solved function is the following:
    solvedFunction(x) ⇐⇒mainFunction(x)
    “engineering functions and main-functions coincide”
Instead, In Owl, we give an approximation, which exploits the relation &quot;main-function-of&quot;.</rdfs:comment>
        <rdfs:label>Solved Function</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#EngineeringMethod -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#EngineeringMethod">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NASO"/>
        <rdfs:comment>&quot;Reifications&quot; of the knowledge that engineers share about ways of implementing
functions through functional decomposition</rdfs:comment>
        <rdfs:label>Engineering Method</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#FeatureOntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#FeatureOntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Features</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#FlowRate -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#FlowRate">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capacity"/>
        <rdfs:label>Flow Rate</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#GenerateElectricEnergy -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#GenerateElectricEnergy">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capability"/>
        <rdfs:label>Capability of Generating Electrical Energy</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Goal -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Goal">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:comment>Goals are selected states-description of a technical artifact.</rdfs:comment>
        <rdfs:label>Goal</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Groove -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Groove">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#FeatureOntologicalFunction"/>
        <rdfs:comment>A groove feature is added in some workpiece</rdfs:comment>
        <rdfs:label>Groove</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Heating -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Heating">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capability"/>
        <rdfs:label>Capability of Heating</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Increase -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Increase">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction"/>
        <rdfs:comment>The value of some target quality increased</rdfs:comment>
        <rdfs:label>Increase</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#IntrinsicQuality -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#IntrinsicQuality">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
        <owl:disjointWith rdf:resource="https://github.com/kataph/function-method-ontology#RelationalQuality"/>
        <rdfs:comment>We define relational qualities as the class complementary to Relational qualities</rdfs:comment>
        <rdfs:comment>intrinsicQt(x) ⇐⇒(Q(x) ∧¬relationalQt(x))</rdfs:comment>
        <rdfs:label>Intrinsic Quality</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Length -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Length">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#IntrinsicQuality"/>
        <rdfs:label>Length</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Mass -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Mass">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#IntrinsicQuality"/>
        <rdfs:label>Mass</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Motor -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Motor">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Motor</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#OntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#OntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#super-concept-of"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#super-concept-of"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:unionOf rdf:parseType="Collection">
                            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
                            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
                        </owl:unionOf>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>FunctionOnt(x) =⇒ (∃y(SP(y,x) ∧ FunctionSys(y)) ∧ ∀y(SP(y,x) ∧ ¬FunctionOnt(y) =⇒
FunctionSys(y)))
“any ontological function x is specialized by some systemic function y and, beyond ontological functions, it
classifies systemic functions only”</rdfs:comment>
        <rdfs:comment>Ontological functions are functions that do not depend on either a method nor a system, and are generalisations of systemic functions</rdfs:comment>
        <rdfs:label>Ontological Function</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#OntologicalFunctionAboutAmountOfEnergy -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#OntologicalFunctionAboutAmountOfEnergy">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Energy Amount</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#PhysicalObjectOntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#PhysicalObjectOntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Physical Objects</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Pipe -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Pipe">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Pipe</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#ProcessOntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#ProcessOntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Processes</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Pump -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Pump">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Pump</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Pumping -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Pumping">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capability"/>
        <rdfs:label>Capability of Pumping</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:label>Ontological Function about Quality Values</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#RelationalQuality -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#RelationalQuality">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
        <rdfs:comment>Heuristically, any quality that &quot;depends on&quot; some external entity.</rdfs:comment>
        <rdfs:label>Relational Quality</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Resistance -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Resistance">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Capacity"/>
        <rdfs:label>Resistance</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Resistor -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Resistor">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#TechnicalArtifact"/>
        <rdfs:label>Resistor</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Role -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Role">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#definition-founded-on"/>
                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#Concept"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>RL(x) =⇒∃yfoundedInst(x,y)
&quot;“if x is a role, then there is a y on which it is instantiation-founded&quot;</rdfs:comment>
        <rdfs:label>Role</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Shape -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Shape">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#PQ"/>
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#IntrinsicQuality"/>
        <rdfs:label>Shape</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#SpotWelding -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#SpotWelding">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Welding"/>
        <rdfs:label>Spot Welding</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#System -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#System">
        <rdfs:label>System</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#SystemicFunction -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#SystemicFunction">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#Role"/>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#classifies"/>
                <owl:allValuesFrom>
                    <owl:Class>
                        <owl:intersectionOf rdf:parseType="Collection">
                            <owl:Class>
                                <owl:intersectionOf rdf:parseType="Collection">
                                    <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Behaviour"/>
                                    <owl:Restriction>
                                        <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#causally-contributes-to"/>
                                        <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#Goal"/>
                                    </owl:Restriction>
                                </owl:intersectionOf>
                            </owl:Class>
                            <owl:Restriction>
                                <owl:onProperty rdf:resource="https://github.com/kataph/function-method-ontology#sp-dependent-on"/>
                                <owl:someValuesFrom rdf:resource="https://github.com/kataph/function-method-ontology#System"/>
                            </owl:Restriction>
                        </owl:intersectionOf>
                    </owl:Class>
                </owl:allValuesFrom>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>FunctionOfSys(x,y) ⇐⇒(RL(x) ∧∃z,g(System(z) ∧goalOf(g,z) ∧∃b,t(CL(b,x,t)  ∧P(y,z,t))
    ∀b,t((CL(b,x,t) ∧P(y,z,t)) =⇒(Behaviour(b) ∧participatesAsDoer(y,b,t)
    ∧causalContr(b,g))))) 
    “x is a systemic function of y if and only if x is a role and there exist a system z and a goal g for z such that x
    is satisfied only by behaviors which have y as doer and causally contribute to achieve g, whenever y is part of z”

     FunctionSys(x) ⇐⇒∃yFunctionOfSys(x,y)
    “x is a systemic function if and only if it is the systemic function of some object y”</rdfs:comment>
        <rdfs:comment>Systemic functions are understood as role concepts that
– classify only behaviors, relative to some behaving artifact,
– are contextualized by a system that contains the behaving artifact and for whom a goal state has been
selected,
– the classified behaviors contribute to the goal of the system.</rdfs:comment>
        <rdfs:label>Systemic Function</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#TechnicalArtifact -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#TechnicalArtifact">
        <rdfs:subClassOf rdf:resource="http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#NAPO"/>
        <rdfs:comment>A technical artifact is any physical object that came into being through some intentional technical process, such as, e.g., any car, plane,
tooling machine, or mechanical device.</rdfs:comment>
        <rdfs:label>Technical Artifact</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#VoltageDivider -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#VoltageDivider">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#EngineeringMethod"/>
        <rdfs:comment>An electrical engineering method used to obtain different voltage values from a voltage source. Through connecting two or more resistores in series with a voltage source, and by calculating the resistance values using Kirchhoff&apos;s law, one can design the divider in such a way to obtain any desired voltage value(s) lower then the original voltage input.</rdfs:comment>
        <rdfs:label>Voltage Divider</rdfs:label>
    </owl:Class>
    


    <!-- https://github.com/kataph/function-method-ontology#Welding -->

    <owl:Class rdf:about="https://github.com/kataph/function-method-ontology#Welding">
        <rdfs:subClassOf rdf:resource="https://github.com/kataph/function-method-ontology#EngineeringMethod"/>
        <rdfs:label>Welding</rdfs:label>
    </owl:Class>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- https://github.com/kataph/function-method-ontology#adjust_voltage_in_circuit_1_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#adjust_voltage_in_circuit_1_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <function-of rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
        <main-function-of rdf:resource="https://github.com/kataph/function-method-ontology#voltage_divider_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#battery_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#battery_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#Battery"/>
        <constant-part-of rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#resistor_1"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#switch_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#battery_voltage_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#battery_voltage_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#BatteryVoltage"/>
        <quality-of rdf:resource="https://github.com/kataph/function-method-ontology#battery_1"/>
        <has-direct-quale rdf:datatype="https://github.com/kataph/function-method-ontology#volts">5</has-direct-quale>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#change_voltage_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#change_voltage_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#OntologicalFunction"/>
        <rdfs:comment>Ontological function: converting chemical energy into electricity</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_in_circuit_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_in_circuit_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <function-of rdf:resource="https://github.com/kataph/function-method-ontology#battery_1"/>
        <sp-dependent-on rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
        <sub-concept-of rdf:resource="https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_1"/>
        <sub-function-of rdf:resource="https://github.com/kataph/function-method-ontology#voltage_divider_1"/>
        <rdfs:comment>Systemic function: converting chemical energy into electricity in the context of a specific system (in a specific position).</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#dissipate_energy_cap_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#dissipate_energy_cap_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#Heating"/>
        <definition-founded-on rdf:resource="https://github.com/kataph/function-method-ontology#change_voltage_1"/>
        <quality-of rdf:resource="https://github.com/kataph/function-method-ontology#resistor_1"/>
        <sp-dependent-on rdf:resource="https://github.com/kataph/function-method-ontology#resistance_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#drop_voltage_in_circuit_1_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#drop_voltage_in_circuit_1_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <function-of rdf:resource="https://github.com/kataph/function-method-ontology#resistor_1"/>
        <sub-function-of rdf:resource="https://github.com/kataph/function-method-ontology#voltage_divider_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#drop_voltage_in_circuit_1_2 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#drop_voltage_in_circuit_1_2">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
        <function-of rdf:resource="https://github.com/kataph/function-method-ontology#resistor_2"/>
        <sub-function-of rdf:resource="https://github.com/kataph/function-method-ontology#voltage_divider_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#electrical_circuit_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#electrical_circuit_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#System"/>
        <constant-part-of rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#generate_electricity_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#generate_electricity_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#GenerateElectricEnergy"/>
        <definition-founded-on rdf:resource="https://github.com/kataph/function-method-ontology#convert_chemical_energy_into_electricity_1"/>
        <quality-of rdf:resource="https://github.com/kataph/function-method-ontology#battery_1"/>
        <sp-dependent-on rdf:resource="https://github.com/kataph/function-method-ontology#battery_voltage_1"/>
        <rdfs:comment>Individual quality of being able to generate electricity</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#resistance_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#resistance_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#Resistance"/>
        <has-direct-quale rdf:datatype="https://github.com/kataph/function-method-ontology#ohms">10</has-direct-quale>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#resistor_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#resistor_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#Resistor"/>
        <constant-part-of rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#battery_1"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#resistor_2"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#resistor_2 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#resistor_2">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#Resistor"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#switch_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#switch_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#switch_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#ElectricSwitch"/>
        <constant-part-of rdf:resource="https://github.com/kataph/function-method-ontology#electrical_circuit_1"/>
        <electric-coupling rdf:resource="https://github.com/kataph/function-method-ontology#battery_1"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#trasform_electricity_into_heat_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#trasform_electricity_into_heat_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#SystemicFunction"/>
    </owl:NamedIndividual>
    


    <!-- https://github.com/kataph/function-method-ontology#voltage_divider_1 -->

    <owl:NamedIndividual rdf:about="https://github.com/kataph/function-method-ontology#voltage_divider_1">
        <rdf:type rdf:resource="https://github.com/kataph/function-method-ontology#VoltageDivider"/>
    </owl:NamedIndividual>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // General axioms
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <rdf:Description>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
        <owl:members rdf:parseType="Collection">
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#AmountOfMatterOntologicalFunction"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Connect"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#FeatureOntologicalFunction"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#PhysicalObjectOntologicalFunction"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#ProcessOntologicalFunction"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#QualityValueOntologicalFunction"/>
        </owl:members>
    </rdf:Description>
    <rdf:Description>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
        <owl:members rdf:parseType="Collection">
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Battery"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Cilinder"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#ElectricSwitch"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Motor"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Pipe"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Pump"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Resistor"/>
        </owl:members>
    </rdf:Description>
    <rdf:Description>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
        <owl:members rdf:parseType="Collection">
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#BatteryVoltage"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#FlowRate"/>
            <rdf:Description rdf:about="https://github.com/kataph/function-method-ontology#Resistance"/>
        </owl:members>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 4.5.26.2023-07-17T20:34:13Z) https://github.com/owlcs/owlapi -->

